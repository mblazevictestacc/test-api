name: cicd
run-name: ${{ github.actor }} is building images and deploying Api
on: 
    push:
        branches:
            - main
    pull_request:
        branches:   
            - main
permissions:
    id-token: write
    contents: read
jobs:
    build-image:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Log in with Azure
              uses: azure/login@v1
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}
            - name: Build, tag, and push docker image to public repo
              working-directory: ./app
              env:
                REGISTRY: docker.io
                REPOSITORY: mblazevictestacc/helloapi
                IMAGE_TAG: latest
              run: |
                docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
                docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
    build-infrastructure:
        needs: build-image
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v2
              with:
                terraform_version: 1.8.5
            - name: Terraform init
              id: init
              working-directory: ./infrastructure
              run: terraform init
            - name: Terraform format
              id: fmt
              working-directory: ./infrastructure
              run: terraform fmt -check
            - name: Terraform validate
              id: validate
              working-directory: ./infrastructure
              run: terraform validate
            - name: Terraform plan
              id: plan
              working-directory: ./infrastructure
              if: github.event_name == 'pull_request'
              run: terraform plan -no-color -input=false
              continue-on-error: true
            - uses: actions/github-script@v6
              if: github.event_name == 'pull_request'
              env:
                PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
              with:
                script: |
                  #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
                  #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
                  #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
        
                  <details><summary>Show Plan</summary>
       
                  \`\`\`\n
       
                  ${process.env.PLAN}
       
                  \`\`\`
       
                  </details>
       
                  *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            - name: Terraform Plan Status
              if: steps.plan.outcome == 'failure'
              run: exit 1
            - name: Terraform Apply
              working-directory: ./infrastructure
              if: github.ref == 'refs/heads/main' && github.event_name == 'push'
              run: terraform apply -auto-approve -input=false
